//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GematriaForTruth {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class GematriaForTruthResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GematriaForTruthResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GematriaForTruth.GematriaForTruthResources", typeof(GematriaForTruthResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 2
        ///2 3
        ///3 5
        ///4 7
        ///5 11
        ///6 13
        ///7 17
        ///8 19
        ///9 23
        ///10 29
        ///11 31
        ///12 37
        ///13 41
        ///14 43
        ///15 47
        ///16 53
        ///17 59
        ///18 61
        ///19 67
        ///20 71
        ///21 73
        ///22 79
        ///23 83
        ///24 89
        ///25 97
        ///26 101
        ///27 103
        ///28 107
        ///29 109
        ///30 113
        ///31 127
        ///32 131
        ///33 137
        ///34 139
        ///35 149
        ///36 151
        ///37 157
        ///38 163
        ///39 167
        ///40 173
        ///41 179
        ///42 181
        ///43 191
        ///44 193
        ///45 197
        ///46 199
        ///47 211
        ///48 223
        ///49 227
        ///50 229
        ///51 233
        ///52 239
        ///53 241
        ///54 251
        ///55 257
        ///56 263
        ///57 269
        ///58 271
        ///59 277
        ///60 281
        ///61 283
        ///62 293
        ///63 307
        ///64 311
        ///65 313
        ///66 317
        ///67 331
        ///68 337
        ///69 347 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string First_100000_prime_numbers {
            get {
                return ResourceManager.GetString("First_100000_prime_numbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2 1
        ///3 2
        ///4 3
        ///5 5
        ///6 8
        ///7 13
        ///8 21
        ///9 34
        ///10 55
        ///11 89
        ///12 144
        ///13 233
        ///14 377
        ///15 610
        ///16 987
        ///17 1597
        ///18 2484
        ///19 4181
        ///20 6765
        ///21 10946
        ///22 17711
        ///23 28657
        ///24 46368
        ///25 75025
        ///26 121393
        ///27 196418
        ///28 317811
        ///29 514229
        ///30 832040
        ///31 1346269
        ///32 2178309
        ///33 3524578.
        /// </summary>
        internal static string First_33_Fibonacci {
            get {
                return ResourceManager.GetString("First_33_Fibonacci", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0 0
        ///1 1
        ///2 3
        ///3 6
        ///4 10
        ///5 15
        ///6 21
        ///7 28
        ///8 36
        ///9 45
        ///10 55
        ///11 66
        ///12 78
        ///13 91
        ///14 105
        ///15 120
        ///16 136
        ///17 153
        ///18 171
        ///19 190
        ///20 210
        ///21 231
        ///22 253
        ///23 276
        ///24 300
        ///25 325
        ///26 351
        ///27 378
        ///28 406
        ///29 435
        ///30 465
        ///31 496
        ///32 528
        ///33 561
        ///34 595
        ///35 630
        ///36 666
        ///37 703
        ///38 741
        ///39 780
        ///40 820
        ///41 861
        ///42 903
        ///43 946
        ///44 990
        ///45 1035
        ///46 1081
        ///47 1128
        ///48 1176
        ///49 1225
        ///50 1275
        ///51 1326
        ///52 1378
        ///53 1431
        ///54 1485
        ///55 1540
        ///56 1596
        ///57 1653
        ///58 1711
        ///59 1770
        ///60 1830
        ///61 1891
        ///62 1953
        ///63 2016
        ///64 2080
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string First_5000_triangular_numbers {
            get {
                return ResourceManager.GetString("First_5000_triangular_numbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 31415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string First_million_pi {
            get {
                return ResourceManager.GetString("First_million_pi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 61803398874989484820458683436563811772030917980576286213544862270526046281890244970720720418939113748475408807538689175212663386222353693179318006076672635443338908659593958290563832266131992829026788067520876689250171169620703222104321626954862629631361443814975870122034080588795445474924618569536486444924104432077134494704956584678850987433944221254487706647809158846074998871240076521705751797883416625624940758906970400028121042762177111777805315317141011704666599146697987317613560067087480710131795236894 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string First_OneHundredThousand_phi {
            get {
                return ResourceManager.GetString("First_OneHundredThousand_phi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
        ///                       Version 3, 29 June 2007
        ///
        /// Copyright (C) 2007 Free Software Foundation, Inc. &lt;https://fsf.org/&gt;
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///                            Preamble
        ///
        ///  The GNU General Public License is a free, copyleft license for
        ///software and other kinds of works.
        ///
        ///  The licenses for most software and other practical works are designed
        ///t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string license {
            get {
                return ResourceManager.GetString("license", resourceCulture);
            }
        }
    }
}
